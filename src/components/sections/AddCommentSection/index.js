import Input from '../../ui/Input';import Textarea from '../../ui/Textarea';import Button from '../../ui/Button';import {useFormik} from 'formik';import * as Yup from 'yup';import { usePostCommentsMutation } from '../../../redux/api/apiSlice';import toast from 'react-hot-toast';const AddCommentSection = () => {  const [postComment] = usePostCommentsMutation();  const formik = useFormik({    initialValues: {      name: '',      email: '',      content: ''    },    validationSchema: Yup.object({      name: Yup.string().required('Required'),      email: Yup.string().email('Invalid email address').required('Required'),      content: Yup.string().required('Required')    }),    onSubmit: async (values, { resetForm }) => {      try {        await postComment(values);        toast.success('Comment added');        resetForm();      } catch (error) {        toast.error('Error while adding comment');      }    }  });  const validationErrorStyles = 'text-left p-1 text-red-500';  return (    <div className="bg-background-lighten text-white py-24 md:py-32 px-4">      <div className="max-w-[768px] ml-auto mr-auto">        <h2 className="text-3xl font-semibold text-left">Add comment</h2>        <form onSubmit={formik.handleSubmit} className="mt-8 flex flex-col gap-4">          <div className="flex flex-col md:flex-row gap-4 space-between items-center">            <Input              placeholder="Your Name"              name="name"              onChange={formik.handleChange}              value={formik.values.name}              onBlur={formik.handleBlur}            />            <Input              placeholder="Your Email"              name="email"              onChange={formik.handleChange}              value={formik.values.email}              onBlur={formik.handleBlur}            />          </div>          <Textarea            placeholder="Your Messages"            name="content"            onChange={formik.handleChange}            value={formik.values.content}            onBlur={formik.handleBlur}          />          <div>            {formik.touched.name && formik.errors.name ? (              <div className={validationErrorStyles}>Name: {formik.errors.name}</div>            ) : null}            {formik.touched.email && formik.errors.email ? (              <div className={validationErrorStyles}>Email: {formik.errors.email}</div>            ) : null}            {formik.touched.content && formik.errors.content ? (              <div className={validationErrorStyles}>Message: {formik.errors.content}</div>            ) : null}          </div>          <Button            type="submit"            text="Send"          />        </form>      </div>    </div>  );};export default AddCommentSection;